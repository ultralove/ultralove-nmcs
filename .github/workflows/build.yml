name: build

on:
  push:
    branches: [develop]
  pull_request:
    branches: [develop]

jobs:
  configure:
    runs-on: ubuntu-latest
    outputs:
      build_timestamp: ${{steps.timestamp.outputs.timestamp}}
      build_id: nmcs-1.0.0-build${{github.run_number}}-${{steps.timestamp.outputs.timestamp}}
    steps:
      - name: configure build id
        id: timestamp
        run: echo "::set-output name=timestamp::$(date -u +'%Y-%m-%d')"

  build:
    needs: configure
    strategy:
      matrix:
        # os: [ubuntu-latest, windows-latest, macos-latest]
        os: [ubuntu-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2

      - name: install (linux)
        run: sudo apt-get install ninja-build uuid-dev libssl-dev liblzma-dev zlib1g-dev
        if: matrix.os == 'ubuntu-latest'

      - name: install (windows)
        run: choco install ninja
        if: matrix.os == 'windows-latest'

      - name: install (darwin)
        run: brew install ninja openssl@3
        if: matrix.os == 'macos-latest'

      - uses: ilammy/msvc-dev-cmd@v1
        with:
          arch: x64

      - name: configure
        run: cmake -GNinja -B${{runner.workspace}}/build -Wno-dev --no-warn-unused-cli -DBUILD_SHARED_LIBS=ON -DCMAKE_BUILD_TYPE=Release -DNMCS_BUILD_ID=${{github.run_number}}

      - name: build
        run: cmake --build ${{runner.workspace}}/build --config Release

      - name: package
        run: cmake --build ${{runner.workspace}}/build --target package --config Release

      - name: upload (linux)
        uses: actions/upload-artifact@v3
        if: matrix.os == 'ubuntu-latest'
        with:
          name: ${{needs.configure.outputs.build_id}}
          path: |
            ${{runner.workspace}}/build/nmcs-1.0.0-build${{github.run_number}}-linux.tar.gz

      - name: upload (windows)
        uses: actions/upload-artifact@v3
        if: matrix.os == 'windows-latest'
        with:
          name: ${{needs.configure.outputs.build_id}}
          path: |
            ${{runner.workspace}}/build/nmcs-1.0.0-build${{github.run_number}}-windows.zip

      - name: upload (darwin)
        uses: actions/upload-artifact@v3
        if: matrix.os == 'macos-latest'
        with:
          name: ${{needs.configure.outputs.build_id}}
          path: |
            ${{runner.workspace}}/build/nmcs-1.0.0-build${{github.run_number}}-darwin.tar.gz

  release:
    needs: [configure, build]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: ${{needs.configure.outputs.build_id}}
          path: ${{runner.workspace}}/package

      - uses: "marvinpinto/action-automatic-releases@latest"
        with:
          repo_token: "${{secrets.GITHUB_TOKEN}}"
          automatic_release_tag: "${{needs.configure.outputs.build_id}}"
          prerelease: true
          files: ${{runner.workspace}}/package/**
